version: "3.9"

services:
  chat:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      API_HOST: 0.0.0.0
      API_PORT: 9001
      MONGO_HOST: mongo.dev.local
      MONGO_PORT: 27017
      MONGO_DATABASE: chat
      MONGO_USER: root
      MONGO_PASSWORD: password
      REDIS_QUEUE_HOST: redis.dev.local
      REDIS_QUEUE_PORT: 6379
      REDIS_QUEUE_STOCK_COMMAND_RECEIVED_TOPIC_NAME: stock_command_received
      REDIS_QUEUE_STOCK_REQUESTED_TOPIC_NAME: stock_requested
      JWT_SECRET_KEY: 74f8dea3-d431-4eef-bf92-19395d0485db
      JWT_TOKEN_EXPIRATION_HOURS: 48
    command: ./app chat
    networks:
      dev_network_local:
        aliases:
          - chat.dev.local
    hostname: chat.dev.local
    ports:
      - 9001:9001
    healthcheck:
      test: ["CMD", "nc", "-vz", "127.0.0.1", "9001"]
      interval: 3s
      timeout: 1s
      retries: 20
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
      chat:
        condition: service_healthy
    environment:
      WEB_HOST: 0.0.0.0
      WEB_PORT: 9090
      CHAT_API_HOST: http://127.0.0.1:9001
    volumes:
      - ./static:/static
    command: ./app web
    networks:
      dev_network_local:
        aliases:
          - web.dev.local
    hostname: web.dev.local
    ports:
      - 9090:9090
    healthcheck:
      test: ["CMD", "nc", "-vz", "127.0.0.1", "9090"]
      interval: 3s
      timeout: 1s
      retries: 20
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      REDIS_QUEUE_HOST: redis.dev.local
      REDIS_QUEUE_PORT: 6379
      REDIS_QUEUE_STOCK_COMMAND_RECEIVED_TOPIC_NAME: stock_command_received
      REDIS_QUEUE_STOCK_REQUESTED_TOPIC_NAME: stock_requested
    command: ./app bot
    networks:
      dev_network_local:
        aliases:
          - bot.dev.local
    hostname: bot.dev.local
  mongo:
    image: mongo:5.0-focal
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_db_data:/data/db
    networks:
      dev_network_local:
        aliases:
          - mongo.dev.local
    hostname: mongo.dev.local
    ports:
      - 28017:27017
    healthcheck:
      test: ["CMD", "mongo", "--quiet", "127.0.0.1/test", "--eval", "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'"]
      start_period: 10s
      interval: 3s
      timeout: 1s
      retries: 20
  redis:
    image: redis:7.0-alpine
    volumes:
      - redis_db_data:/var/lib/redis
    networks:
      dev_network_local:
        aliases:
          - redis.dev.local
    hostname: redis.dev.local
    ports:
      - 16379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 3s
      timeout: 1s
      retries: 20

volumes:
  mongo_db_data:
  redis_db_data:

networks:
  dev_network_local:
    driver: bridge
